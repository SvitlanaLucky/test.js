// const friends = ['Brokk', 'Alex', 'Anna'];
// console.table(friends);

// friends[2] = 'qeqeqeqe';
// console.table(friends)

//----------------------------------------------------------------

// let a = 10;
// let b = a;

// console.log('1 a:', a);
// console.log('1 b:', b);

// a = 30;

// console.log('2 a:', a);
// console.log('2 b:', b);


// const a = [1, 2, 3];
// const b = a;

// console.log('a =', a);
// console.log('b =', b);

// a[1] = 400;

// console.log('a =', a);
// console.log('b =', b);
// console.log(a === b);



// const friends = ['Mango', 'Kiwi', 'Poly', 'Ajax'];
// const lastIndex = friends.length - 1;

// for (let i = 0; i < +lastIndex; i += 1) {
//     friends[i] += '-1';
   
// };

// console.table(friends);


// for (const friend of friends) {
//     console.log(friend)
// }

//--------------------------------------------------------------------------
// –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –ø–æ–∫—É–ø–æ–∫

// const cart = [54, 28, 105, 70, 92, 17, 120];
// let total = 0;

// for (let i = 0; i < cart.length; i += 1) {
//     total += cart[i];
// }

// for (const value of cart) {
//     total += value;
// }

// console.log('total =', total);

// ---------------------------------------------------------------------
// –Ω–∞–ø–∏—Å–∞—Ç–∏ —Å–∫—Ä–∏–∏–ø—Ç —â–æ –ø–æ—Ä–∞—Ö—É—î –≤—Å—ñ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –º–∞—Å–∏–≤—É

// const numbers = [1, 2, 3, 5, 7, 9, 10, 13, 14];
// let total = 0;

// for (let i = 0; i < numbers.length; i += 1) {
//     console.log(numbers[i]);

//     if (numbers[i] % 2 === 0) {
//         console.log('–ü–∞—Ä–Ω–µ!!!');

//         total += numbers[i];
//     }
// }

// console.log('total:', total);

//---------------------------------------------------------------------------------
// –Ω–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –ª–æ–≥—ñ–Ω–∞

// const logins = ['m4ngoDoe', 'tuyyitit', 'poly1scute', '7uipipre'];
// const loginToFind = 'poly1scute';
// let message = `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${loginToFind} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`;

// for (let i = 0; i < logins.length; i += 1) {
//     const login = logins[i];

//     console.log(login);

//     if (login === loginToFind) {
//         console.log('login:', login);
//         break;
//     }
// }

// const message = logins.includes(loginToFind)
    // ? 'yes'
//     : 'no';

// console.log(message);

//-----------------------------------------------------------------------------
// –Ω–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å–∏–≤—ñ

// const numbers = [45, 56, 76, 32, 43];
// let smallestNumber = numbers[0];

// for (const number of numbers) {
//     if (number < smallestNumber) {
//         smallestNumber = number;
//     }
// –∞–±–æ –Ω–∞–π–±—ñ–ª—å—à–µ
//     if (number > smallestNumber) {
//         smallestNumber = number;
//     }
// }

// console.log('small number:', smallestNumber);

//-----------------------------------------------------------------------------------
// –Ω–∞–ø–∏—Å–∞—Ç–∏ —Å–∫—Ä–∏–ø—Ç —â–æ –æ–±'—î–¥–Ω—É—î –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É –≤ —Å—Ç—Ä–æ–∫—É

// const friends = ['mango', 'poly', 'kiwi', 'ajax'];
// let string = '';

// for (const friend of friends) {
//     string += friend + ',';
// }

// string = string.slice(0, string.length - 1)

// const string = friends.join('--');

// console.log(string);

//------------------------------------------------------------------------
// –Ω–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –∑–∞–º—ñ–Ω—é—î —Ä–µ–≥—ñ—Å—Ç—Ä –Ω–∞ –ø—Ä–æ—Ç–∏–ª–µ–∂–Ω–∏–π

// const string = 'JavaScript';
// const letters = string.split('');
// let invertedString = '';

// console.log(letters);

// for (const letter of letters) {
//     console.log(letter);

    // if (letter === letter.toLowerCase()) {
    //     console.log('—Ü—è –±—É–∫–≤–∞ –≤ –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ:', letter);

    //     invertedString += letter.toUpperCase();
    // } else {
    //     invertedString += letter.toLocaleLowerCase();
    // }

//     invertedString += letter === letter.toLowerCase()
//         ? letter.toUpperCase()
//         : letter.toLowerCase();
// }

// console.log(invertedString);

//-------------------------------------------------------------------------------
//–Ω–∞–∑–≤–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞

// const title = 'Top 10 benefits of React framework';

// const normalizedTitle = title.toLowerCase();
// const words = normalizedTitle.split(' ');

// console.log(words);
    
// console.log(normalizedTitle);

// const slug = words.join('-');
// console.log(slug);


// const slug1 = title.toLowerCase().split(' ').join('-');
// console.log(slug1);

//------------------------------------------------------------------------------
// –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–∏–¥–∞–ª–∏—Ç–∏ –¥–æ–±–∞–≤–∏—Ç–∏ –æ–±–Ω–æ–≤–∏—Ç–∏

// const cards = [
//     'Car-1',
//     'Car-2',
//     'Car-3',
//     'Car-4',
//     'Car-5',
// ];

// console.table(cards);

// const cardToRemove = 'Car-3';
// const index = cards.indexOf(cardToRemove);
// console.log(index);
// cards.splice(index, 2);

// console.table(cards);

//------------------------

// const cardToInsert = 'Car-6';
// const index = 3;

// cards.splice(1, 0, 5, 6, 7);

// console.table(cards);

//----------------------------


// const cardToUpdate = 'Car-4';
// const index = cards.indexOf(cardToUpdate);

// console.log(index);

// cards.splice(index, 1, 'newCar-4');

// console.table(cards);

//-------------------------------------------------------------------------------------------------

// let str = 'hello';
// let a = str.split('', 2);

// console.log(a);

//---------------------------------------------------
// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º

// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
// –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.


// const genres = ['Jazz', 'Blues'];
// genres.push('–†–æ–∫-–Ω-—Ä–æ–ª');

// console.log(genres[0]);
// console.log(genres[genres.length - 1]);

// console.log(genres.shift());

// genres.unshift('Country', 'Reggae');

// console.log(genres);

//------------------------------------------------------------------------------------

//  Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.–ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

// const values = '8 11';
// const arr = values.split(' ');
// const [num1, num2] = arr;

// const value = Number(num1) * Number(num2);

// console.log(value);

//--------------------------------------------------------------------------------------

// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i < fruits.length; i += 1) {
//     console.log(`${i + 1}: ${fruits[i]}`);
// }

//-----------------------------------------------------------------------------------------------

// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';

// const namesArr = names.split(',');
// const phonesArr = phones.split(',');

// for (let i = 0; i < namesArr.length; i += 1) {
//     console.log(`${namesArr[i]}: ${phonesArr[i]}`);
// }

// console.log(namesArr);
// console.log(phonesArr);

//------------------------------------------------------------------------------------------

// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const string = '—è—ñ—Å–∫–µ–ª–û —å—Ç–∏–±—é–ª –∞–Ω–∞–ª—Ç—ñ–≤–°';

// console.log(string.split('').reverse().join(''));

//---------------------------------------------------------------------------------------------

// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.


// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// langs.sort();

// for (let i = 0; i < langs.length - 1; i += 1) {
//     for (let j = i + 1; j < langs.length; j += 1) {

//         const item1 = langs[i];
//         const item2 = langs[j];

//         if (item2[0] < item1[0]) {
//             langs[j] = item1;
//             langs[i] = item2;
//         }
//     }
// };

// console.log(langs);

//--------------------------------------------------------------------------------------------


